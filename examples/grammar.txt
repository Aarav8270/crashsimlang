S -> statementlist

statementlist -> statement statmentlist
                 | statement
* Generate automaton with start state

statement -> eventdefinition
             | variantdefinition
             | assignment
             | dataword

eventdefinition -> id (id_1, t_1, l_1),...,(id_n, t_n, l_n)
* Describe an event you want to look for in the stream and the specific
  parameters you are interested in

variantdefinition -> var_id ed_1,...ed_n
* Give a single name to a collection of events

assignment -> x <- <e>
* Assign a value, either a literal or expression result, to a register

dataword -> id paramexp predexp outputexp
* Define a state that should be entered when a dataword matching id and paramexp
  is encountered.
* Also define any register operations that should occur when entering this state
* Optionally describe any predicates that must be matched in order to enter the
  state
* Optionally describe any output that should be produced when the state is
  entered

paramexp -> (pid_1, op_1, regid_1),...,(pid_n, op_n, regid_n)

predexp -> (lhs_1, cmp_1, rhs_1),...,(lhs_n, cmp_n, rhs_n)

outputexp -> dataword
