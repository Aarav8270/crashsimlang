26    munmap(0x7f5844e29000, 14602)     = 0
26    openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_CLOEXEC) = 4
26    lseek(4, 0, SEEK_CUR)             = 0
26    fstat(4, {st_dev=makedev(0xfe, 0x1), st_ino=3299555, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=1619390206 /* 2021-04-25T18:36:46.586193477-0400 */, st_atime_nsec=586193477, st_mtime=1619390193 /* 2021-04-25T18:36:33.753141464-0400 */, st_mtime_nsec=753141464, st_ctime=1619390194 /* 2021-04-25T18:36:34.769141404-0400 */, st_ctime_nsec=769141404}) = 0
26    read(4, "127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\n172.17.0.2\tb99c1a774f04\n", 4096) = 174
26    lseek(4, 0, SEEK_CUR)             = 174
26    read(4, "", 4096)                 = 0
26    close(4)                          = 0
26    stat("/etc/resolv.conf", {st_dev=makedev(0xfe, 0x1), st_ino=3299557, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=97, st_atime=1619390206 /* 2021-04-25T18:36:46.586193477-0400 */, st_atime_nsec=586193477, st_mtime=1619390193 /* 2021-04-25T18:36:33.753141464-0400 */, st_mtime_nsec=753141464, st_ctime=1619390194 /* 2021-04-25T18:36:34.769141404-0400 */, st_ctime_nsec=769141404}) = 0
26    openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_CLOEXEC) = 4
26    lseek(4, 0, SEEK_CUR)             = 0
26    fstat(4, {st_dev=makedev(0xfe, 0x1), st_ino=3299555, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=174, st_atime=1619390206 /* 2021-04-25T18:36:46.586193477-0400 */, st_atime_nsec=586193477, st_mtime=1619390193 /* 2021-04-25T18:36:33.753141464-0400 */, st_mtime_nsec=753141464, st_ctime=1619390194 /* 2021-04-25T18:36:34.769141404-0400 */, st_ctime_nsec=769141404}) = 0
26    read(4, "127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\n172.17.0.2\tb99c1a774f04\n", 4096) = 174
26    close(4)                          = 0
26    listen(3, 5)                      = 0
26    getsockname(3, {sa_family=AF_INET, sin_port=htons(8080), sin_addr=inet_addr("0.0.0.0")}, [16]) = 0
26    write(1, "Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...\n", 61) = 61
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 1 ([{fd=3, revents=POLLIN}])
26    accept4(3, {sa_family=AF_INET, sin_port=htons(58632), sin_addr=inet_addr("172.17.0.1")}, [16], SOCK_CLOEXEC) = 4
26    getsockname(4, {sa_family=AF_INET, sin_port=htons(8080), sin_addr=inet_addr("172.17.0.2")}, [128->16]) = 0
26    mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7f58438e1000
27    set_robust_list(0x7f58440e19e0, 24) = 0
27    mmap(NULL, 134217728, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7f583b8e1000
27    munmap(0x7f583b8e1000, 7467008)   = 0
27    munmap(0x7f5840000000, 59641856)  = 0
27    gettid()                          = 27
27    recvfrom(4,  "GET / HTTP/1.1\r\nHost: localhost:8080\r\nUpgrade-Insecure-Requests: 1\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML like Gecko) Version/14.0.3 Safari/605.1.15\r\nAccept-Language: en-us\r\nAccept-Encoding: gzip deflate\r\nConnection: keep-alive\r\n\r\n", 8192, 0, NULL, NULL) = 356
26    poll([{fd=3, events=POLLIN}], 1, 500 <unfinished ...>
27    stat("/var/www/html//", {st_dev=makedev(0, 0x9a), st_ino=2644615, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
27    stat("/var/www/html//index.html", 0x7f58440df4c0) = -1 ENOENT (No such file or directory)
27    stat("/var/www/html//index.htm", 0x7f58440df4c0) = -1 ENOENT (No such file or directory)
27    openat(AT_FDCWD, "/var/www/html//", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 5
27    fstat(5, {st_dev=makedev(0, 0x9a), st_ino=2644615, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
27    getdents64(5, [{d_ino=2644615, d_off=2315591029328583303, d_reclen=24, d_type=DT_DIR, d_name="."}, {d_ino=2647144, d_off=4797447544005782152, d_reclen=40, d_type=DT_REG, d_name="index.lighttpd.html"}, {d_ino=2644614, d_off=9223372036854775807, d_reclen=24, d_type=DT_DIR, d_name=".."}], 32768) = 88
27    getdents64(5, [], 32768)          = 0
27    close(5)                          = 0
27    stat("/var/www/html//index.lighttpd.html", {st_dev=makedev(0, 0x9a), st_ino=2647144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3371, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
27    lstat("/var/www/html//index.lighttpd.html", {st_dev=makedev(0, 0x9a), st_ino=2647144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3371, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
27    write(2, "172.17.0.1 - - [25/Apr/2021 18:40:08] \"GET / HTTP/1.1\" 200 -\n", 61) = 61
27    sendto(4, "HTTP/1.0 200 OK\r\nServer: SimpleHTTP/0.6 Python/3.8.5\r\nDate: Sun, 25 Apr 2021 22:40:08 GMT\r\nContent-type: text/html; charset=utf-8\r\nContent-Length: 360\r\n\r\n", 154, 0, NULL, 0) = 154
27    sendto(4, "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Directory listing for /</title>\n</head>\n<body>\n<h1>Directory listing for /</h1>\n<hr>\n<ul>\n<li><a href=\"index.lighttpd.html\">index.lighttpd.html</a></li>\n</ul>\n<hr>\n</body>\n</html>\n", 360, 0, NULL, 0) = 360
27    shutdown(4, SHUT_WR)              = 0
27    close(4)                          = 0
27    openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 4
27    fstat(4, {st_dev=makedev(0, 0x9a), st_ino=2521727, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14602, st_atime=1619380340 /* 2021-04-25T15:52:20.758465441-0400 */, st_atime_nsec=758465441, st_mtime=1619380340 /* 2021-04-25T15:52:20.746465442-0400 */, st_mtime_nsec=746465442, st_ctime=1619380340 /* 2021-04-25T15:52:20.749465441-0400 */, st_ctime_nsec=749465441}) = 0
27    mmap(NULL, 14602, PROT_READ, MAP_PRIVATE, 4, 0) = 0x7f5844e29000
27    close(4)                          = 0
27    openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libgcc_s.so.1", O_RDONLY|O_CLOEXEC) = 4
27    read(4, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\3405\0\0\0\0\0\0@\0\0\0\0\0\0\0\330\222\1\0\0\0\0\0\0\0\0\0@\08\0\v\0@\0\35\0\34\0\1\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0()\0\0\0\0\0\0()\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\5\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0\0000\0\0\0\0\0\0U\20\1\0\0\0\0\0U\20\1\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\4\0\0\0\0P\1\0\0\0\0\0\0P\1\0\0\0\0\0\0P\1\0\0\0\0\0\\3\0\0\0\0\0\0\\3\0\0\0\0\0\0\0\20\0\0\0\0\0\0\1\0\0\0\6\0\0\0\310\215\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\3\0\0\0\0\0\0\200\6\0\0\0\0\0\0\0\20\0\0\0\0\0\0\2\0\0\0\6\0\0\0\340\215\1\0\0\0\0\0\340\235\1\0\0\0\0\0\340\235\1\0\0\0\0\0\360\1\0\0\0\0\0\0\360\1\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0\310\2\0\0\0\0\0\0$\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0S\345td\4\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0\250\2\0\0\0\0\0\0 \0\0\0\0\0\0\0 \0\0\0\0\0\0\0\10\0\0\0\0\0\0\0P\345td\4\0\0\0\254\\\1\0\0\0\0\0\254\\\1\0\0\0\0\0\254\\\1\0\0\0\0\0\224\6\0\0\0\0\0\0\224\6\0\0\0\0\0\0\4\0\0\0\0\0\0\0Q\345td\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0R\345td\4\0\0\0\310\215\1\0\0\0\0\0\310\235\1\0\0\0\0\0\310\235\1\0\0\0\0\08\2\0\0\0\0\0\08\2\0\0\0\0\0\0\1\0\0\0\0\0\0\0\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0d\347\31\2247!\271e\5\31\253\317\236\357\331Jq5\336\315\0\0\0\0\203\0\0\0\25\0\0\0\20\0\0\0\n\0\0\0\23\34\3\30\4$\0\1\1\201\0T\4\6\210\20\200\204\0\10\0\10\5\200\2\0@\20D\20\0\266\2\200\320 \301\0\220\202t\1\0\4\10(\300\2H\1\v \320\1\2(\0235\4`l\322\0!", 832) = 832
27    fstat(4, {st_dev=makedev(0, 0x9a), st_ino=1183649, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=208, st_size=104984, st_atime=1596888770 /* 2020-08-08T08:12:50-0400 */, st_atime_nsec=0, st_mtime=1596888770 /* 2020-08-08T08:12:50-0400 */, st_mtime_nsec=0, st_ctime=1619379797 /* 2021-04-25T15:43:17.330407581-0400 */, st_ctime_nsec=330407581}) = 0
27    mmap(NULL, 107592, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 4, 0) = 0x7f58438c6000
27    mmap(0x7f58438c9000, 73728, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x3000) = 0x7f58438c9000
27    mmap(0x7f58438db000, 16384, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x15000) = 0x7f58438db000
27    mmap(0x7f58438df000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x18000) = 0x7f58438df000
27    close(4)                          = 0
26    <... poll resumed>)               = 1 ([{fd=3, revents=POLLIN}])
26    accept4(3, {sa_family=AF_INET, sin_port=htons(58636), sin_addr=inet_addr("172.17.0.1")}, [16], SOCK_CLOEXEC) = 4
26    getsockname(4,  <unfinished ...>
27    munmap(0x7f5844e29000, 14602 <unfinished ...>
26    <... getsockname resumed>{sa_family=AF_INET, sin_port=htons(8080), sin_addr=inet_addr("172.17.0.2")}, [128->16]) = 0
26    mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0 <unfinished ...>
27    <... munmap resumed>)             = 0
26    <... mmap resumed>)               = 0x7f58430c5000
28    set_robust_list(0x7f58438c59e0, 24 <unfinished ...>
27    madvise(0x7f58438e1000, 8368128, MADV_DONTNEED <unfinished ...>
28    <... set_robust_list resumed>)    = 0
27    <... madvise resumed>)            = 0
28    gettid( <unfinished ...>
27    exit(0 <unfinished ...>
28    <... gettid resumed>)             = 28
27    <... exit resumed>)               = ?
27    +++ exited with 0 +++
28    recvfrom(4, "GET /favicon.ico HTTP/1.1\r\nHost: localhost:8080\r\nConnection: keep-alive\r\nAccept: */*\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15\r\nAccept-Language: en-us\r\nReferer: http://localhost:8080/\r\nAccept-Encoding: gzip, deflate\r\n\r\n", 8192, 0, NULL, NULL) = 310
26    poll([{fd=3, events=POLLIN}], 1, 500 <unfinished ...>
28    stat("/var/www/html/favicon.ico", 0x7f58438c34c0) = -1 ENOENT (No such file or directory)
28    openat(AT_FDCWD, "/var/www/html/favicon.ico", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
28    write(2, "172.17.0.1 - - [25/Apr/2021 18:40:08] code 404, message File not found\n", 71) = 71
28    write(2, "172.17.0.1 - - [25/Apr/2021 18:40:08] \"GET /favicon.ico HTTP/1.1\" 404 -\n", 72) = 72
28    sendto(4, "HTTP/1.0 404 File not found\r\nServer: SimpleHTTP/0.6 Python/3.8.5\r\nDate: Sun, 25 Apr 2021 22:40:08 GMT\r\nConnection: close\r\nContent-Type: text/html;charset=utf-8\r\nContent-Length: 469\r\n\r\n", 184, 0, NULL, 0) = 184
28    sendto(4, "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n        \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n        <title>Error response</title>\n    </head>\n    <body>\n        <h1>Error response</h1>\n        <p>Error code: 404</p>\n        <p>Message: File not found.</p>\n        <p>Error code explanation: HTTPStatus.NOT_FOUND - Nothing matches the given URI.</p>\n    </body>\n</html>\n", 469, 0, NULL, 0) = 469
28    shutdown(4, SHUT_WR)              = 0
28    close(4)                          = 0
28    madvise(0x7f58430c5000, 8368128, MADV_DONTNEED) = 0
28    exit(0)                           = ?
28    +++ exited with 0 +++
26    <... poll resumed>)               = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 1 ([{fd=3, revents=POLLIN}])
26    accept4(3, {sa_family=AF_INET, sin_port=htons(58640), sin_addr=inet_addr("172.17.0.1")}, [16], SOCK_CLOEXEC) = 4
26    getsockname(4, {sa_family=AF_INET, sin_port=htons(8080), sin_addr=inet_addr("172.17.0.2")}, [128->16]) = 0
29    set_robust_list(0x7f58438c59e0, 24) = 0
29    gettid()                          = 29
29    recvfrom(4, "GET /index.lighttpd.html HTTP/1.1\r\nHost: localhost:8080\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15\r\nReferer: http://localhost:8080/\r\nAccept-Language: en-us\r\nAccept-Encoding: gzip, deflate\r\n\r\n", 8192, 0, NULL, NULL) = 408
26    poll([{fd=3, events=POLLIN}], 1, 500 <unfinished ...>
29    stat("/var/www/html/index.lighttpd.html", {st_dev=makedev(0, 0x9a), st_ino=2647144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3371, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
29    openat(AT_FDCWD, "/var/www/html/index.lighttpd.html", O_RDONLY|O_CLOEXEC) = 5
29    fstat(5, {st_dev=makedev(0, 0x9a), st_ino=2647144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3371, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
29    ioctl(5, TCGETS, 0x7f58438c3420)  = -1 ENOTTY (Inappropriate ioctl for device)
29    lseek(5, 0, SEEK_CUR)             = 0
29    fstat(5, {st_dev=makedev(0, 0x9a), st_ino=2647144, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3371, st_atime=1619380400 /* 2021-04-25T15:53:20.031945467-0400 */, st_atime_nsec=31945467, st_mtime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_mtime_nsec=593465447, st_ctime=1619380340 /* 2021-04-25T15:52:20.593465447-0400 */, st_ctime_nsec=593465447}) = 0
29    write(2, "172.17.0.1 - - [25/Apr/2021 18:40:10] \"GET /index.lighttpd.html HTTP/1.1\" 200 -\n", 80) = 80
29    sendto(4, "HTTP/1.0 200 OK\r\nServer: SimpleHTTP/0.6 Python/3.8.5\r\nDate: Sun, 25 Apr 2021 22:40:10 GMT\r\nContent-type: text/html\r\nContent-Length: 3371\r\nLast-Modified: Sun, 25 Apr 2021 19:52:20 GMT\r\n\r\n", 186, 0, NULL, 0) = 186
29    read(5, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Welcome page</title>\n<style type=\"text/css\" media=\"screen\">\nbody { background: #e7e7e7; font-family: Verdana, sans-serif; font-size: 11pt; }\n#page { background: #ffffff; margin: 50px; border: 2px solid #c0c0c0; padding: 10px; }\n#header { background: #4b6983; border: 2px solid #7590ae; text-align: center; padding: 10px; color: #ffffff; }\n#header h1 { color: #ffffff; }\n#body { padding: 10px; }\nspan.tt { font-family: monospace; }\nspan.bold { font-weight: bold; }\na:link { text-decoration: none; font-weight: bold; color: #C00; background: #ffc; }\na:visited { text-decoration: none; font-weight: bold; color: #999; background: #ffc; }\na:active { text-decoration: none; font-weight: bold; color: #F00; background: #FC0; }\na:hover { text-decoration: none; color: #C00; background: #FC0; }\n</style>\n</head>\n<body>\n<div id=\"page\">\n <div id=\"header\">\n <h1> Placeholder page </h1>\n  The owner of this web site has not put up any web pages yet. Please come back later.\n </div>\n <div id=\"body\">\n  <h2>You should replace this page with your own web pages as soon as possible.</h2>\n  Unless you changed its configuration, your new server is configured as follows:\n  <ul>\n   <li>Configuration files can be found in <span class=\"tt\">/etc/lighttpd</span>. Please read  <span class=\"tt\">/etc/lighttpd/conf-available/README</span> file.</li>\n   <li>The DocumentRoot, which is the directory under which all your HTML files should exist, is set to <span class=\"tt\">/var/www/html</span>.</li>\n   <li>CGI scripts are looked for in <span class=\"tt\">/usr/lib/cgi-bin</span>, which is where Ubuntu packages will place their scripts. You can enable cgi module by using command <span class=\"bold tt\">&quot;lighty-enable-mod cgi&quot;</span>.</li>\n   <li>Log files are placed in <span class=\"tt\">/var/log/lighttpd</span>, and will be rotated weekly. The frequency of rotation can be easily changed by editing <span class=\"tt\">/etc/logrotate.d/lighttpd</span>.</li>\n   <li>The default directory index is <span class=\"tt\">index.html</span>, meaning that requests for a directory <span class=\"tt\">/foo/bar/</span> will give the contents of the file /var/www/html/foo/bar/index.html if it exists (assuming that <span class=\"tt\">/var/www/html</span> is your DocumentRoot).</li>\n   <li>You can enable user directories by using command <span class=\"bold tt\">&quot;lighty-enable-mod userdir&quot;</span></li>\n  </ul>\n  <h2>About this page</h2>\n  <p>\n   This is a placeholder page installed by the Ubuntu release of the <a href=\"http://packages.ubuntu.com/lighttpd\">Lighttpd server package.</a>\n  </p>\n  <p>\n   This computer has installed the Ubuntu operating system, but it has nothing to do with the Ubuntu Project. Please do not contact the Ubuntu Project about it.\n  </p>\n  <p>\n   If you find a bug in this Lighttpd package, or in Lighttpd itself, please file a bug report on it. Instructions on doing this, and the list of known bugs of this package, can be found in the \n   <a href=\"https://bugs.launchpad.net/ubuntu/+source/lighttpd\">Ubuntu Bug Tracking System.</a>\n  </p>\n </div>\n</div>\n<!-- s:853e9a42efca88ae0dd1a83aeb215047 -->\n</body>\n</html>\n", 65536) = 3371
29    read(5, "", 61440)                = 0
29    sendto(4, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<title>Welcome page</title>\n<style type=\"text/css\" media=\"screen\">\nbody { background: #e7e7e7; font-family: Verdana, sans-serif; font-size: 11pt; }\n#page { background: #ffffff; margin: 50px; border: 2px solid #c0c0c0; padding: 10px; }\n#header { background: #4b6983; border: 2px solid #7590ae; text-align: center; padding: 10px; color: #ffffff; }\n#header h1 { color: #ffffff; }\n#body { padding: 10px; }\nspan.tt { font-family: monospace; }\nspan.bold { font-weight: bold; }\na:link { text-decoration: none; font-weight: bold; color: #C00; background: #ffc; }\na:visited { text-decoration: none; font-weight: bold; color: #999; background: #ffc; }\na:active { text-decoration: none; font-weight: bold; color: #F00; background: #FC0; }\na:hover { text-decoration: none; color: #C00; background: #FC0; }\n</style>\n</head>\n<body>\n<div id=\"page\">\n <div id=\"header\">\n <h1> Placeholder page </h1>\n  The owner of this web site has not put up any web pages yet. Please come back later.\n </div>\n <div id=\"body\">\n  <h2>You should replace this page with your own web pages as soon as possible.</h2>\n  Unless you changed its configuration, your new server is configured as follows:\n  <ul>\n   <li>Configuration files can be found in <span class=\"tt\">/etc/lighttpd</span>. Please read  <span class=\"tt\">/etc/lighttpd/conf-available/README</span> file.</li>\n   <li>The DocumentRoot, which is the directory under which all your HTML files should exist, is set to <span class=\"tt\">/var/www/html</span>.</li>\n   <li>CGI scripts are looked for in <span class=\"tt\">/usr/lib/cgi-bin</span>, which is where Ubuntu packages will place their scripts. You can enable cgi module by using command <span class=\"bold tt\">&quot;lighty-enable-mod cgi&quot;</span>.</li>\n   <li>Log files are placed in <span class=\"tt\">/var/log/lighttpd</span>, and will be rotated weekly. The frequency of rotation can be easily changed by editing <span class=\"tt\">/etc/logrotate.d/lighttpd</span>.</li>\n   <li>The default directory index is <span class=\"tt\">index.html</span>, meaning that requests for a directory <span class=\"tt\">/foo/bar/</span> will give the contents of the file /var/www/html/foo/bar/index.html if it exists (assuming that <span class=\"tt\">/var/www/html</span> is your DocumentRoot).</li>\n   <li>You can enable user directories by using command <span class=\"bold tt\">&quot;lighty-enable-mod userdir&quot;</span></li>\n  </ul>\n  <h2>About this page</h2>\n  <p>\n   This is a placeholder page installed by the Ubuntu release of the <a href=\"http://packages.ubuntu.com/lighttpd\">Lighttpd server package.</a>\n  </p>\n  <p>\n   This computer has installed the Ubuntu operating system, but it has nothing to do with the Ubuntu Project. Please do not contact the Ubuntu Project about it.\n  </p>\n  <p>\n   If you find a bug in this Lighttpd package, or in Lighttpd itself, please file a bug report on it. Instructions on doing this, and the list of known bugs of this package, can be found in the \n   <a href=\"https://bugs.launchpad.net/ubuntu/+source/lighttpd\">Ubuntu Bug Tracking System.</a>\n  </p>\n </div>\n</div>\n<!-- s:853e9a42efca88ae0dd1a83aeb215047 -->\n</body>\n</html>\n", 3371, 0, NULL, 0) = 3371
29    read(5, "", 65536)                = 0
29    close(5)                          = 0
29    shutdown(4, SHUT_WR)              = 0
29    close(4)                          = 0
29    madvise(0x7f58430c5000, 8368128, MADV_DONTNEED) = 0
29    exit(0)                           = ?
29    +++ exited with 0 +++
26    <... poll resumed>)               = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = 0 (Timeout)
26    poll([{fd=3, events=POLLIN}], 1, 500) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)
26    --- SIGINT {si_signo=SIGINT, si_code=SI_KERNEL} ---
26    rt_sigreturn({mask=[]})           = -1 EINTR (Interrupted system call)
26    write(1, "\nKeyboard interrupt received, exiting.", 38) = 38
26    write(1, "\n", 1)                 = 1
26    close(3)                          = 0
26    rt_sigaction(SIGINT, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f5844c7b210}, {sa_handler=0x627d00, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f5844c7b210}, 8) = 0
26    sigaltstack(NULL, {ss_sp=0x16f3990, ss_flags=0, ss_size=16384}) = 0
26    sigaltstack({ss_sp=NULL, ss_flags=SS_DISABLE, ss_size=0}, NULL) = 0
26    munmap(0x7f5844642000, 262144)    = 0
26    exit_group(0)                     = ?
26    +++ exited with 0 +++
